{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","handlePageChange","pageCount","Math","ceil","pages","className","cn","disabled","href","onClick","map","item","active","items","selectValues","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","totalItems","length","firstItem","lastItem","min","itemsOnPage","id","value","onChange","event","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"mLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,iBAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAQd,EAAW,EAAGW,GAc5B,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAA0B,IAAhBR,IAJhB,SAQE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QArBW,WACG,IAAhBV,GACFC,EAAiBD,EAAc,IAc7B,oBAWDK,EAAMM,KAAI,SAACC,GAAD,OACT,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQb,IAAgBY,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMT,EAAiBW,IAJlC,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUR,IAAgBE,IAJhC,SAQE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAjEW,WACbV,IAAgBE,GAClBD,EAAiBD,EAAc,IA0D7B,wBC3EFc,G,MAAQvB,EAAW,EAAG,KAEtBwB,EAAe,CAAC,EAAG,EAAG,GAAI,IAEnBC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAaP,EAAMQ,OACnBC,EAAYJ,GAAgBnB,EAAc,GAAK,EAC/CwB,EAAWrB,KAAKsB,IAAIN,EAAenB,EAAaqB,GAChDK,EAAcnC,EAAWgC,EAAWC,GAAUb,KAAI,SAAAhB,GAAC,qBAAYA,MAWrE,OACE,sBAAKW,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCuB,EADjC,cACgDC,EADhD,eAC+DH,EAD/D,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAOT,EACPU,SApBiB,SAACC,GAC1BV,GAAiBU,EAAMC,OAAOH,OAC9BV,EAAe,IAaT,SAOGH,EAAaJ,KAAI,SAACiB,GAAD,OAChB,wBAEEA,MAAOA,EAFT,SAIGA,GAHIA,UASb,uBAAOI,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOuB,EACPtB,QAASoB,EACTnB,YAAaA,EACbC,iBA9CmB,SAACgC,GACxBf,EAAee,MA+Cb,6BACGP,EAAYf,KAAI,SAACC,GAAD,OACf,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCjEnBsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c453ff32.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  handlePageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  handlePageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pageCount);\n\n  const handleNext = () => {\n    if (currentPage !== pageCount) {\n      handlePageChange(currentPage + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentPage !== 1) {\n      handlePageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn(\n          'page-item',\n          {\n            disabled: currentPage === 1,\n          },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrev}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((item: number) => (\n        <li\n          className={cn(\n            'page-item',\n            { active: currentPage === item },\n          )}\n          key={item}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={() => handlePageChange(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn(\n          'page-item',\n          {\n            disabled: currentPage === pageCount,\n          },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageCount}\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\n\nconst items = getNumbers(1, 42);\n\nconst selectValues = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const totalItems = items.length;\n  const firstItem = itemsPerPage * (currentPage - 1) + 1;\n  const lastItem = Math.min(itemsPerPage * currentPage, totalItems);\n  const itemsOnPage = getNumbers(firstItem, lastItem).map(n => `Item ${n}`);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleChangeSelect}\n          >\n            {selectValues.map((value: number) => (\n              <option\n                key={value}\n                value={value}\n              >\n                {value}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        handlePageChange={handlePageChange}\n      />\n      <ul>\n        {itemsOnPage.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}